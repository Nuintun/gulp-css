{"name":"Gulp-css","tagline":"A gulp plugin for css transport and concat","body":"gulp-css\r\n=========\r\n\r\n>A gulp plugin for css transport and concat\r\n\r\n>[![Dependencies][david-image]][david-url]\r\n\r\n[david-image]: http://img.shields.io/david/nuintun/gulp-css.svg?style=flat-square\r\n[david-url]: https://david-dm.org/nuintun/gulp-css\r\n\r\n###Usage\r\n```js\r\nvar path = require('path');\r\nvar join = path.join;\r\nvar relative = path.relative;\r\nvar gulp = require('gulp');\r\nvar css = require('gulp-css');\r\n\r\n// Fixed css resource path\r\nfunction onpath(path, property, file, wwwroot){\r\n  if (/^[^./\\\\]/.test(path)) {\r\n    path = './' + path;\r\n  }\r\n\r\n  if (path.indexOf('.') === 0) {\r\n    path = join(dirname(file), path);\r\n    path = relative(wwwroot, path);\r\n    path = '/' + path;\r\n    path = path.replace(/\\\\+/g, '/');\r\n  }\r\n\r\n  path = path.replace('assets/', 'online/');\r\n\r\n  return path;\r\n}\r\n\r\n// Task\r\ngulp.task('default', function (){\r\n  gulp.src('assets/css/**/*.css')\r\n    .pipe(css({ onpath: onpath }))\r\n    .pipe(gulp.dest('online/css'))\r\n});\r\n```\r\n\r\n###API\r\n####css(options)\r\n#####  *options* \r\n\r\n- prefix ```String|Function```\r\n  \r\n  对样式文件中的类名添加前缀类名。\r\n\r\n- onpath ```Function```\r\n  \r\n  样式文件中的资源文件路径处理回调。\r\n\r\n- cache ```Boolean```\r\n  \r\n  文件内存缓存，转换完成的文件会暂时存储在内存中以便提升转换效率。\r\n\r\n- wwwroot ```String```\r\n  \r\n  网站根目录配置，路径相对于 ```gulpfile.js``` 目录。\r\n\r\n- rename ```Object|Function```\r\n  \r\n  重命名文件，有 ```debug``` 和 ```min``` 两个配置可选，打开后文件名会自动添加 -debug 和 -min 后缀，debug 打开时 min 配置无效。当 rename 是函数的时候要返回 ```{ prefix: '', suffix: '' }``` 格式的对象，分别对应前缀和后缀。\r\n\r\n- compress ```Boolean```\r\n  \r\n  是否压缩样式代码。\r\n\r\n>注意事项：*样式路径以 ```/``` 结尾会默认用 ```index.css``` 补全*， 样式 import 规则和原生一致，需要注意的是尽量不要引入远程资源。\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}